/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'SONG.*|SCORE.*' {
      ext.prefix = ""
      ext.api_download_token = params.api_download_token ?: params.api_token
      ext.api_upload_token = params.api_upload_token ?: params.api_token
    }

    withName: 'BCF_SNP' {
        ext.prefix = {"${meta.id}.snp"}
        ext.args = { "-H -f PASS -v snps --output-type v"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_snp" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_INS' {
        ext.prefix = {"${meta.id}.ins"}
        ext.args = { "-H -f PASS -v indels -i 'ILEN>0' --output-type v --max-alleles 2"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_ins" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_DEL' {
        ext.prefix = {"${meta.id}.del"}
        ext.args = { "-H -f PASS -v indels -i 'ILEN<0' --output-type v --max-alleles 2"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_del" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_HET_SNP' {
        ext.prefix = {"${meta.id}.het_snp"}
        ext.args = { "-H -f PASS -v snps -g het --output-type v"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_het_snp" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_HOMO_SNP' {
        ext.prefix = {"${meta.id}.homo_snp"}
        ext.args = { "-H -f PASS -v snps -g hom --output-type v"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_homo_snp" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_HET_INDEL' {
        ext.prefix = {"${meta.id}.het_indel"}
        ext.args = { "-H -f PASS -v indels -g het --output-type v"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_het_indel" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'BCF_HOMO_INDEL' {
        ext.prefix = {"${meta.id}.homo_indel"}
        ext.args = { "-H -f PASS -v indels -g hom --output-type v"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcf_homo_indel" },
            pattern: '*vcf',
            enabled: params.outdir ? true : false
        ]
    }

    withName: 'STATS_TSTV' {
        ext.prefix = {"${meta.id}"}
        ext.args = { "-f PASS"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/bcftools_stats_tstv" },
            pattern: '*txt',
            enabled: params.outdir ? true : false
        ]
    }
    withName: 'PREP_METRICS' {
        ext.prefix = {"${meta.id}"}
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/prep_metrics" },
            pattern: '*json',
            enabled: params.outdir ? true : false
        ]
    }

}
